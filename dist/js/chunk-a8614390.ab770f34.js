(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-a8614390"],{"0538":function(e,t,n){"use strict";var i=n("da84"),a=n("e330"),o=n("59ed"),s=n("861d"),r=n("1a2d"),u=n("f36a"),c=n("40d5"),l=i.Function,h=a([].concat),m=a([].join),v={},f=function(e,t,n){if(!r(v,t)){for(var i=[],a=0;a<t;a++)i[a]="a["+a+"]";v[t]=l("C,a","return new C("+m(i,",")+")")}return v[t](e,n)};e.exports=c?l.bind:function(e){var t=o(this),n=t.prototype,i=u(arguments,1),a=function(){var n=h(i,u(arguments));return this instanceof a?f(t,n.length,n):t.apply(e,n)};return s(n)&&(a.prototype=n),a}},"131a":function(e,t,n){var i=n("23e7"),a=n("d2bb");i({target:"Object",stat:!0},{setPrototypeOf:a})},"262e":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n("d9e2"),n("131a");function i(e,t){return i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},i(e,t)}function a(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}},"2caf":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));n("4ae1"),n("d3b7"),n("f8c9");var i=n("7e84");function a(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}n("d9e2"),n("a4d3"),n("e01a"),n("d28b"),n("3ca3"),n("ddb0");function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function s(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function r(e,t){if(t&&("object"===o(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return s(e)}function u(e){var t=a();return function(){var n,a=Object(i["a"])(e);if(t){var o=Object(i["a"])(this).constructor;n=Reflect.construct(a,arguments,o)}else n=a.apply(this,arguments);return r(this,n)}}},3046:function(e,t,n){var i,a;(function(o,s){i=s,a="function"===typeof i?i.call(t,n,t,e):i,void 0===a||(e.exports=a)})(0,{easeInQuad:function(e){return Math.pow(e,2)},easeOutQuad:function(e){return-(Math.pow(e-1,2)-1)},easeInOutQuad:function(e){return(e/=.5)<1?.5*Math.pow(e,2):-.5*((e-=2)*e-2)},easeInCubic:function(e){return Math.pow(e,3)},easeOutCubic:function(e){return Math.pow(e-1,3)+1},easeInOutCubic:function(e){return(e/=.5)<1?.5*Math.pow(e,3):.5*(Math.pow(e-2,3)+2)},easeInQuart:function(e){return Math.pow(e,4)},easeOutQuart:function(e){return-(Math.pow(e-1,4)-1)},easeInOutQuart:function(e){return(e/=.5)<1?.5*Math.pow(e,4):-.5*((e-=2)*Math.pow(e,3)-2)},easeInQuint:function(e){return Math.pow(e,5)},easeOutQuint:function(e){return Math.pow(e-1,5)+1},easeInOutQuint:function(e){return(e/=.5)<1?.5*Math.pow(e,5):.5*(Math.pow(e-2,5)+2)},easeInSine:function(e){return 1-Math.cos(e*(Math.PI/2))},easeOutSine:function(e){return Math.sin(e*(Math.PI/2))},easeInOutSine:function(e){return-.5*(Math.cos(Math.PI*e)-1)},easeInExpo:function(e){return 0===e?0:Math.pow(2,10*(e-1))},easeOutExpo:function(e){return 1===e?1:1-Math.pow(2,-10*e)},easeInOutExpo:function(e){return 0===e?0:1===e?1:(e/=.5)<1?.5*Math.pow(2,10*(e-1)):.5*(2-Math.pow(2,-10*--e))},easeInCirc:function(e){return-(Math.sqrt(1-e*e)-1)},easeOutCirc:function(e){return Math.sqrt(1-Math.pow(e-1,2))},easeInOutCirc:function(e){return(e/=.5)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)},easeOutBounce:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},easeInBack:function(e){var t=1.70158;return e*e*((t+1)*e-t)},easeOutBack:function(e){var t=1.70158;return(e-=1)*e*((t+1)*e+t)+1},easeInOutBack:function(e){var t=1.70158;return(e/=.5)<1?e*e*((1+(t*=1.525))*e-t)*.5:.5*((e-=2)*e*((1+(t*=1.525))*e+t)+2)},elastic:function(e){return-1*Math.pow(4,-8*e)*Math.sin((6*e-1)*(2*Math.PI)/2)+1},swingFromTo:function(e){var t=1.70158;return(e/=.5)<1?e*e*((1+(t*=1.525))*e-t)*.5:.5*((e-=2)*e*((1+(t*=1.525))*e+t)+2)},swingFrom:function(e){var t=1.70158;return e*e*((t+1)*e-t)},swingTo:function(e){var t=1.70158;return(e-=1)*e*((t+1)*e+t)+1},bounce:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},bouncePast:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?2-(7.5625*(e-=1.5/2.75)*e+.75):e<2.5/2.75?2-(7.5625*(e-=2.25/2.75)*e+.9375):2-(7.5625*(e-=2.625/2.75)*e+.984375)},easeFromTo:function(e){return(e/=.5)<1?.5*Math.pow(e,4):-.5*((e-=2)*Math.pow(e,3)-2)},easeFrom:function(e){return Math.pow(e,4)},easeTo:function(e){return Math.pow(e,.25)}})},3410:function(e,t,n){var i=n("23e7"),a=n("d039"),o=n("7b0b"),s=n("e163"),r=n("e177"),u=a((function(){s(1)}));i({target:"Object",stat:!0,forced:u,sham:!r},{getPrototypeOf:function(e){return s(o(e))}})},"4ae1":function(e,t,n){var i=n("23e7"),a=n("d066"),o=n("2ba4"),s=n("0538"),r=n("5087"),u=n("825a"),c=n("861d"),l=n("7c73"),h=n("d039"),m=a("Reflect","construct"),v=Object.prototype,f=[].push,d=h((function(){function e(){}return!(m((function(){}),[],e)instanceof e)})),p=!h((function(){m((function(){}))})),g=d||p;i({target:"Reflect",stat:!0,forced:g,sham:g},{construct:function(e,t){r(e),u(t);var n=arguments.length<3?e:r(arguments[2]);if(p&&!d)return m(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var i=[null];return o(f,i,t),new(o(s,e,i))}var a=n.prototype,h=l(c(a)?a:v),g=o(e,h,t);return c(g)?g:h}})},"7e84":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));n("131a"),n("3410");function i(e){return i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},i(e)}},"8ba5":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return C}));n("b0c0");var i=n("d4ec"),a=n("bee2"),o=n("262e"),s=n("2caf"),r=n("5a89"),u=n("3046"),c=n("36f3"),l="#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 modelMatrix;\nuniform float time;\nuniform float easeTransition1;\nuniform float easeTransition2;\nuniform float easeTransition3;\nuniform vec2 imgRatio;\nuniform sampler2D noiseTex;\n\nvarying vec2 vUv;\nvarying vec2 vUpdateUv;\nvarying float vTime1;\nvarying float vTime2;\nvarying float vTime3;\n\nvoid main(void) {\n  vec2 updateUv = uv * imgRatio + vec2(\n    (1.0 - imgRatio.x) * 0.5,\n    (1.0 - imgRatio.y) * 0.5\n    );\n\n  // Calculation of the wave animation.\n  float wave1 = sin(updateUv.x * -8.0 + updateUv.y * -8.0 + time);\n  float wave2 = sin(updateUv.x * 5.0 + updateUv.y * 2.0 + time);\n  float wave = wave1 * 0.6 + wave2 * 1.2;\n\n  // Calculation of the slide animation.\n  float noiseR = texture2D(noiseTex, updateUv + vec2(time * 0.1, 0.0)).r;\n  float noiseG = texture2D(noiseTex, updateUv + vec2(time * 0.2, 0.0)).g;\n  float slide = texture2D(noiseTex, uv * vec2(0.998) + 0.001).b;\n\n  float mask1 = easeTransition1 * 2.0 - slide;\n  float maskPrev1 = smoothstep(0.0, 0.5, mask1);\n  float maskNext1 = 1.0 - smoothstep(0.5, 1.0, mask1);\n\n  float mask2 = easeTransition2 * 2.0 - slide;\n  float maskPrev2 = smoothstep(0.0, 0.5, mask2);\n  float maskNext2 = 1.0 - smoothstep(0.5, 1.0, mask2);\n\n  float mask3 = easeTransition3 * 2.0 - slide;\n  float maskPrev3 = smoothstep(0.0, 0.5, mask3);\n  float maskNext3 = 1.0 - smoothstep(0.5, 1.0, mask3);\n\n  float height = (maskPrev1 * maskNext1 + maskPrev2 * maskNext2 + maskPrev3 * maskNext3) * 8.0 * (slide * 0.5 + 0.5);\n\n  // coordinate transformation\n  vec3 wavePosition = vec3(0.0, 0.0, wave);\n  vec3 slidePosition = vec3(0.0, 0.0, height);\n  vec3 updatePosition = position + wavePosition + slidePosition;\n  vec4 mPosition = modelMatrix * vec4(updatePosition, 1.0);\n\n  vUv = uv;\n  vUpdateUv = updateUv;\n  vTime1 = easeTransition1;\n  vTime2 = easeTransition2;\n  vTime3 = easeTransition3;\n\n  gl_Position = projectionMatrix * viewMatrix * mPosition;\n}\n",h="precision highp float;\n#define GLSLIFY 1\n\nuniform float time;\nuniform float easeTransition1;\nuniform float easeTransition2;\nuniform float easeTransition3;\nuniform vec2 imgRatio;\nuniform sampler2D noiseTex;\nuniform sampler2D imgTex1;\nuniform sampler2D imgTex2;\nuniform sampler2D imgTex3;\n\nvarying vec2 vUv;\nvarying vec2 vUpdateUv;\nvarying float vTime1;\nvarying float vTime2;\nvarying float vTime3;\n\nvec3 convertHsvToRgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n  vec2 imgUv = vec2(\n    vUv.x * imgRatio.x + (1.0 - imgRatio.x) * 0.5,\n    vUv.y * imgRatio.y + (1.0 - imgRatio.y) * 0.5\n  );\n  vec2 p = vUv * 2.0 - 1.0;\n\n  float noiseR = texture2D(noiseTex, vUpdateUv - vec2(time * 0.04, 0.0)).r;\n  float noiseG = texture2D(noiseTex, vUpdateUv + vec2(time * 0.04, 0.0)).g;\n  float slide = texture2D(noiseTex, vUv * vec2(0.998) + 0.001).b;\n\n  float mask1 = vTime1 * 1.38 - (slide * 0.6 + noiseR * 0.2 + noiseG * 0.2);\n  float maskPrev1 = 1.0 - smoothstep(0.17, 0.19, mask1);\n  float maskNext1 = smoothstep(0.19, 0.21, mask1);\n  float maskEdge1 = smoothstep(0.04, 0.19, mask1) * (1.0 - smoothstep(0.19, 0.34, mask1));\n\n  float mask2 = vTime2 * 1.38 - (slide * 0.6 + noiseR * 0.2 + noiseG * 0.2);\n  float maskPrev2 = 1.0 - smoothstep(0.17, 0.19, mask2);\n  float maskNext2 = smoothstep(0.19, 0.21, mask2);\n  float maskEdge2 = smoothstep(0.04, 0.19, mask2) * (1.0 - smoothstep(0.19, 0.34, mask2));\n\n  float mask3 = vTime3 * 1.38 - (slide * 0.6 + noiseR * 0.2 + noiseG * 0.2);\n  float maskPrev3 = 1.0 - smoothstep(0.17, 0.19, mask3);\n  float maskNext3 = smoothstep(0.19, 0.21, mask3);\n  float maskEdge3 = smoothstep(0.04, 0.19, mask3) * (1.0 - smoothstep(0.19, 0.34, mask3));\n\n  vec4 img1 = texture2D(imgTex1, imgUv - p * 0.1 * (1.0 - easeTransition3));\n  vec4 img2 = texture2D(imgTex2, imgUv - p * 0.1 * (1.0 - easeTransition1));\n  vec4 img3 = texture2D(imgTex3, imgUv - p * 0.1 * (1.0 - easeTransition2));\n\n  vec3 edgeColor = convertHsvToRgb(\n    vec3(1.1 - noiseG * 0.1, 0.45, 0.45)\n    );\n\n  vec4 color1 = img1 * maskNext3 * maskPrev1;\n  vec4 color2 = img2 * maskNext1 * maskPrev2;\n  vec4 color3 = img3 * maskNext2 * maskPrev3;\n  vec3 color4 = edgeColor * (maskEdge1 + maskEdge2 + maskEdge3);\n  float opacity = (color1.a + color2.a + color3.a) * (0.5 + maskEdge1 * 0.5);\n\n  if (opacity < 0.01) {\n    discard;\n  }\n\n  gl_FragColor = vec4(color1.rgb + color2.rgb + color3.rgb + color4, opacity);\n}\n",m=function(e){Object(o["a"])(n,e);var t=Object(s["a"])(n);function n(e){var a;Object(i["a"])(this,n);var o=new r["PlaneBufferGeometry"](e,.666*e,48,32),s=new r["RawShaderMaterial"]({uniforms:{time:{value:0},easeTransition1:{value:0},easeTransition2:{value:0},easeTransition3:{value:0},noiseTex:{value:null},imgTex1:{value:null},imgTex2:{value:null},imgTex3:{value:null},imgRatio:{value:new r["Vector2"](1,.666)}},vertexShader:l,fragmentShader:h,transparent:!0});return a=t.call(this,o,s),a.name="ImagePlane",a.imgIndexPrev=0,a.imgIndexNext=0,a.renderOrder=5,a}return Object(a["a"])(n,[{key:"start",value:function(e,t){this.imgTexes=t,this.material.uniforms.noiseTex.value=e,this.material.uniforms.imgTex1.value=t[0],this.material.uniforms.imgTex2.value=t[1]}},{key:"update",value:function(e,t,n,i){this.material.uniforms.time.value+=e,this.material.uniforms.easeTransition1.value=t,this.material.uniforms.easeTransition2.value=n,this.material.uniforms.easeTransition3.value=i}},{key:"changeTex",value:function(e,t){switch(this.imgIndexPrev=this.imgIndexNext,this.imgIndexNext=e,t){case 0:default:this.material.uniforms.imgTex1.value=this.imgTexes[this.imgIndexPrev],this.material.uniforms.imgTex2.value=this.imgTexes[this.imgIndexNext];break;case 1:this.material.uniforms.imgTex2.value=this.imgTexes[this.imgIndexPrev],this.material.uniforms.imgTex3.value=this.imgTexes[this.imgIndexNext];break;case 2:this.material.uniforms.imgTex3.value=this.imgTexes[this.imgIndexPrev],this.material.uniforms.imgTex1.value=this.imgTexes[this.imgIndexNext];break}}}]),n}(r["Mesh"]),v="#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 modelMatrix;\nuniform float time;\nuniform float easeTransition;\nuniform vec2 imgRatio;\nuniform sampler2D noiseTex;\n\nvarying vec2 vUv;\nvarying float vOpacity;\n\nvoid main(void) {\n  vec2 p = uv * 2.0 - 1.0;\n  float edge = abs(p.x);\n\n  vec2 updateUv = uv * imgRatio + vec2(\n    (1.0 - imgRatio.x) * 0.5,\n    (1.0 - imgRatio.y) * 0.5\n    );\n\n  // Calculation of the wave animation.\n  float wave1 = sin(updateUv.x * -8.0 + updateUv.y * -8.0 + time);\n  float wave2 = sin(updateUv.x * 5.0 + updateUv.y * 2.0 + time);\n  float wave = wave1 * 0.6 + wave2 * 1.2;\n\n  // Calculation of the slide animation.\n  float noiseR = texture2D(noiseTex, updateUv + vec2(time * 0.1, 0.0)).r;\n  float noiseG = texture2D(noiseTex, updateUv + vec2(time * 0.2, 0.0)).g;\n  float slide = texture2D(noiseTex, uv * vec2(0.998) + 0.001).b;\n\n  float mask = easeTransition * 1.38 - (slide * 0.6 + noiseR * 0.2 + noiseG * 0.2);\n  float h1 = (1.0 - smoothstep(0.0, 0.23, mask)) * 4.8;\n\n  float mask2 = easeTransition * 2.0 - slide;\n  float maskPrev = smoothstep(0.0, 0.5, mask2);\n  float maskNext = 1.0 - smoothstep(0.5, 1.0, mask2);\n  float h2 = maskPrev * maskNext * 8.0 * (slide * 0.5 + 0.5);\n\n  float height = h1 + h2;\n\n  // coordinate transformationA\n  vec3 wavePosition = vec3(0.0, 0.0, wave);\n  vec3 slidePosition = vec3(0.0, 0.0, height);\n  vec3 updatePosition = position + wavePosition + slidePosition;\n  vec4 mPosition = modelMatrix * vec4(updatePosition, 1.0);\n\n  float opacity = smoothstep(0.0, 0.1, h1) * (1.0 - smoothstep(1.0, 4.8, h1)) * (1.0 - pow(edge, 2.0));\n\n  vUv = uv;\n  vOpacity = opacity;\n\n  gl_Position = projectionMatrix * viewMatrix * mPosition;\n}\n",f="precision highp float;\n#define GLSLIFY 1\n\nuniform float time;\nuniform float duration;\nuniform vec2 imgRatio;\nuniform sampler2D noiseTex;\n\nvarying vec2 vUv;\nvarying float vOpacity;\n\nvec3 convertHsvToRgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n  vec2 updateUv = vUv * imgRatio + vec2(\n    (1.0 - imgRatio.x) * 0.5,\n    (1.0 - imgRatio.y) * 0.5\n    );\n\n  float noiseR = texture2D(noiseTex, updateUv + vec2(time * 0.1, 0.0)).r;\n  float noiseG = texture2D(noiseTex, updateUv + vec2(time * 0.2, 0.0)).g;\n\n  vec3 rgb = convertHsvToRgb(vec3(0.1, 0.5, 0.75));\n  float opacity = vOpacity * smoothstep(0.4, 0.6, noiseR);\n\n  if (opacity < 0.01) {\n    discard;\n  }\n\n  gl_FragColor = vec4(rgb, opacity);\n}\n",d=function(e){Object(o["a"])(n,e);var t=Object(s["a"])(n);function n(e){var a;Object(i["a"])(this,n);var o=new r["PlaneBufferGeometry"](e,.666*e,64,64),s=new r["RawShaderMaterial"]({uniforms:{time:{value:0},easeTransition:{value:0},noiseTex:{value:null},imgRatio:{value:new r["Vector2"](1,.666)}},vertexShader:v,fragmentShader:f,transparent:!0,blending:r["AdditiveBlending"]});return a=t.call(this,o,s),a.name="ImageFire",a}return Object(a["a"])(n,[{key:"start",value:function(e){this.material.uniforms.noiseTex.value=e}},{key:"update",value:function(e,t){this.material.uniforms.time.value+=e,this.material.uniforms.easeTransition.value=t}}]),n}(r["Mesh"]),p=n("c0d6"),g="#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 modelMatrix;\nuniform float time;\nuniform float easeTransition1;\nuniform float easeTransition2;\nuniform float easeTransition3;\nuniform vec2 resolution;\nuniform vec2 imgRatio;\nuniform sampler2D noiseTex;\nuniform float pixelRatio;\n\nvarying float vOpacity;\n\nvoid main(void) {\n  vec2 updateUv = uv * imgRatio + vec2(\n    (1.0 - imgRatio.x) * 0.5,\n    (1.0 - imgRatio.y) * 0.5\n    );\n\n  // Calculation of the wave animation.\n  float wave1 = sin(updateUv.x * -8.0 + updateUv.y * -8.0 + time);\n  float wave2 = sin(updateUv.x * 5.0 + updateUv.y * 2.0 + time);\n  float wave = wave1 * 0.6 + wave2 * 1.2;\n\n  // Calculation of the slide animation.\n  float noiseR = texture2D(noiseTex, updateUv * 1.4 + vec2(time * 0.1, 0.0)).r;\n  float noiseG = texture2D(noiseTex, updateUv * 1.4 + vec2(time * 0.2, 0.0)).g;\n  float slide = texture2D(noiseTex, updateUv * vec2(0.99) + 0.005).b;\n\n  float height1 = (easeTransition1 - slide) * 6.0 * (slide * 0.5 + 0.5);\n  float height2 = (easeTransition2 - slide) * 6.0 * (slide * 0.5 + 0.5);\n  float height3 = (easeTransition3 - slide) * 6.0 * (slide * 0.5 + 0.5);\n  float opacity =\n    (\n      smoothstep(0.2, 0.4, easeTransition1 * 2.1 - slide) * (1.0 - smoothstep(0.7, 1.0, easeTransition1 * 2.1 - slide))\n      + smoothstep(0.2, 0.4, easeTransition2 * 2.1 - slide) * (1.0 - smoothstep(0.7, 1.0, easeTransition2 * 2.1 - slide))\n      + smoothstep(0.2, 0.4, easeTransition3 * 2.1 - slide) * (1.0 - smoothstep(0.7, 1.0, easeTransition3 * 2.1 - slide))\n      )\n    * 0.8;\n\n  // coordinate transformation\n  vec3 wavePosition = vec3(0.0, 0.0, wave);\n  vec3 slidePosition = vec3(\n    cos(radians(noiseR * 360.0 + time * 200.0)) * (2.0 + 2.0 * slide),\n    sin(radians(noiseG * 360.0 + time * 200.0)) * (2.0 + 2.0 * slide),\n    height1 + height2 + height3\n    );\n  vec3 updatePosition = position + wavePosition + slidePosition;\n  vec4 mPosition = modelMatrix * vec4(updatePosition, 1.0);\n\n  float distanceFromCamera = length((viewMatrix * mPosition).xyz);\n  float pointSize = 4.0 * pixelRatio * 50.0 / distanceFromCamera * resolution.y / 1024.0;\n\n  vOpacity = opacity;\n\n  gl_Position = projectionMatrix * viewMatrix * mPosition;\n  gl_PointSize = pointSize;\n}\n",x="precision highp float;\n#define GLSLIFY 1\n\nvarying float vOpacity;\n\nvec3 convertHsvToRgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid main() {\n  // Convert PointCoord to the other vec2 has a range from -1.0 to 1.0.\n  vec2 p = gl_PointCoord * 2.0 - 1.0;\n\n  // Draw circle\n  float radius = length(p);\n  float opacity = (1.0 - smoothstep(0.5, 1.0, radius)) * vOpacity;\n\n  // Define Colors\n  vec3 rgb = convertHsvToRgb(vec3(0.11, 0.4, 0.95));\n\n  if (opacity < 0.01) {\n    discard;\n  }\n\n  gl_FragColor = vec4(rgb, opacity);\n}\n",y=n("6d59"),T=function(e){Object(o["a"])(n,e);var t=Object(s["a"])(n);function n(e){var a;Object(i["a"])(this,n);var o=new r["PlaneBufferGeometry"](e,.666*e,24,24),s=new r["BufferGeometry"];s.setAttribute("position",o.attributes.position),s.setAttribute("uv",o.attributes.uv);var u=new r["RawShaderMaterial"]({uniforms:{time:{value:0},easeTransition1:{value:0},easeTransition2:{value:0},easeTransition3:{value:0},resolution:{value:new r["Vector2"]},noiseTex:{type:"t",value:null},imgRatio:{value:new r["Vector2"](1,.666)},pixelRatio:{value:y["a"]}},vertexShader:g,fragmentShader:x,transparent:!0,blending:r["AdditiveBlending"],depthTest:!1});return a=t.call(this,s,u),a.name="ImagePoints",a}return Object(a["a"])(n,[{key:"start",value:function(e){this.material.uniforms.noiseTex.value=e}},{key:"update",value:function(e,t,n,i){this.material.uniforms.time.value+=e,this.material.uniforms.easeTransition1.value=t,this.material.uniforms.easeTransition2.value=n,this.material.uniforms.easeTransition3.value=i}},{key:"resize",value:function(){var e=p["a"].state.resolution;this.material.uniforms.resolution.value.copy(e)}}]),n}(r["Points"]),w=1.8,b=1.8,C=function(e){Object(o["a"])(n,e);var t=Object(s["a"])(n);function n(){var e;return Object(i["a"])(this,n),e=t.call(this),e.name="ImageGroup",e.size=new r["Vector3"],e.margin=new r["Vector2"],e.timeTranslate=0,e.timeChange1=0,e.timeChange2=0,e.timeChange3=0,e.easeFuncTranslate=null,e.easeStepTranslate=0,e.easeStepChange1=0,e.easeStepChange2=0,e.easeStepChange3=0,e.transitionStart=0,e.transitionEnd=0,e.currentIndex=0,e.changeIndex=0,e.delayTranslate=0,e.delayChange1=0,e.delayChange2=0,e.delayChange3=0,e.isTranslating=!1,e.isChanging1=!1,e.isChanging2=!1,e.isChanging3=!1,e.position.set(0,1,0),e.rotation.set(c["a"].radians(-22),c["a"].radians(0),c["a"].radians(-8)),e}return Object(a["a"])(n,[{key:"start",value:function(e,t){var n=20,i=new m(n),a=new d(n),o=new d(n),s=new d(n),r=new T(n);i.start(e,t),a.start(e),o.start(e),s.start(e),r.start(e),i.renderOrder=2,a.renderOrder=10,a.position.z=2,o.renderOrder=10,o.position.z=2,s.renderOrder=10,s.position.z=2,r.renderOrder=10,r.position.z=2,this.add(i),this.add(a),this.add(o),this.add(s),this.add(r)}},{key:"change",value:function(e,t){if(e!==this.currentIndex){switch(e>0&&0===this.currentIndex?(this.easeFuncTranslate=u["easeOutExpo"],this.delayTranslate=.8,0===this.changeIndex&&(this.delayChange1=.6),1===this.changeIndex&&(this.delayChange2=.6),2===this.changeIndex&&(this.delayChange3=.6),this.transitionStart=24*t,this.transitionEnd=0):0===e&&this.currentIndex>0?(this.easeFuncTranslate=u["easeInOutExpo"],this.delayTranslate=0,0===this.changeIndex&&(this.delayChange1=.3),1===this.changeIndex&&(this.delayChange2=.3),2===this.changeIndex&&(this.delayChange3=.3),this.transitionStart=this.position.y,this.transitionEnd=24*t):(this.delayTranslate=0,0===this.changeIndex&&(this.delayChange1=0),1===this.changeIndex&&(this.delayChange2=0),2===this.changeIndex&&(this.delayChange3=0),this.transitionStart=this.position.y,this.transitionEnd=0),this.changeIndex){case 0:default:this.timeChange1=0,this.timeChange2=0,this.isChanging1=!0,this.isChanging2=!1;break;case 1:this.timeChange2=0,this.timeChange3=0,this.isChanging2=!0,this.isChanging3=!1;break;case 2:this.timeChange3=0,this.timeChange1=0,this.isChanging3=!0,this.isChanging1=!1;break}this.currentIndex=e,this.timeTranslate=0,this.isTranslating=!0,this.children[0].changeTex(e,this.changeIndex),this.children[0].update(0,this.easeStepChange1,this.easeStepChange2,this.easeStepChange3),this.children[1].update(0,this.easeStepChange1),this.children[2].update(0,this.easeStepChange2),this.children[3].update(0,this.easeStepChange3),this.children[4].update(0,this.easeStepChange1,this.easeStepChange2,this.easeStepChange3),this.changeIndex=this.changeIndex>=2?0:this.changeIndex+1}}},{key:"update",value:function(e){!0===this.isTranslating&&(this.timeTranslate+=e,this.easeStepTranslate=this.easeFuncTranslate(c["a"].clamp((this.timeTranslate-this.delayTranslate)/w,0,1))),!0===this.isChanging1&&(this.timeChange1+=e),!0===this.isChanging2&&(this.timeChange2+=e),!0===this.isChanging3&&(this.timeChange3+=e),this.easeStepChange1=Object(u["easeOutQuad"])(c["a"].clamp((this.timeChange1-this.delayChange1)/b,0,1)),this.easeStepChange2=Object(u["easeOutQuad"])(c["a"].clamp((this.timeChange2-this.delayChange2)/b,0,1)),this.easeStepChange3=Object(u["easeOutQuad"])(c["a"].clamp((this.timeChange3-this.delayChange3)/b,0,1)),this.position.y=this.transitionStart+this.easeStepTranslate*(this.transitionEnd-this.transitionStart),this.children[0].update(e,this.easeStepChange1,this.easeStepChange2,this.easeStepChange3),this.children[1].update(e,this.easeStepChange1),this.children[2].update(e,this.easeStepChange2),this.children[3].update(e,this.easeStepChange3),this.children[4].update(e,this.easeStepChange1,this.easeStepChange2,this.easeStepChange3)}},{key:"resize",value:function(){this.children[4].resize()}}]),n}(r["Group"])},f8c9:function(e,t,n){var i=n("23e7"),a=n("da84"),o=n("d44e");i({global:!0},{Reflect:{}}),o(a.Reflect,"Reflect",!0)}}]);
//# sourceMappingURL=chunk-a8614390.ab770f34.js.map